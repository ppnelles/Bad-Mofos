html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*{box-sizing:border-box}::-moz-selection{background:#fff;color:#fff;text-shadow:none}::selection{background:#fff;color:#fff;text-shadow:none}html{line-height:1.5;-webkit-tap-highlight-color:rgba(0,0,0,0)}body{margin:0;background:#ee5253;font-family:Kadwa,Georgia,Times,Times New Roman,serif;font-size:calc(16px + .25vw);font-weight:400;color:#fff;-webkit-font-smoothing:antialiased}figure{margin:0;padding:0}img{display:inline-block;width:auto;max-width:100%;height:auto}p img{margin-bottom:.5em}.site-content{width:90%;max-width:1300px;margin:0 auto}a{color:#fff;text-decoration:underline;font-weight:900;background-color:transparent;transition:all .25s ease-in-out;padding:0 2px}a:hover{color:#ee5253;background-color:#fff;text-decoration:none}a:active,a:focus{outline:none}a img{border:none}.btn,button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;background-color:#fff;color:#fff;border:none;padding:1rem;text-decoration:none}.btn:active,.btn:focus,button:active,button:focus,input[type=button]:active,input[type=button]:focus,input[type=reset]:active,input[type=reset]:focus,input[type=submit]:active,input[type=submit]:focus{outline:none}b,strong{font-weight:700}cite,dfn,em,i{font-style:italic}h1,h2,h3{font-family:Kadwa,Georgia,Times,Times New Roman,serif;font-weight:700;margin:0}h1{font-size:calc(3rem + 1.2vw);line-height:1.15;margin:0 0 .5em}h1 span{display:block}h2{font-size:calc(2.6rem + 1vw)}h3{font-weight:400;font-size:calc(18px + .25vw)}h3 span{display:block}p{margin:0 0 2rem}pre{background:#eee;font-family:Courier\ 10 Pitch,Courier,monospace;font-size:1.5rem;line-height:1.6;margin-bottom:1.6em;max-width:100%;overflow:auto;padding:1.6em}code,kbd,tt,var{font-family:Monaco,Consolas,Andale Mono,DejaVu Sans Mono,monospace;font-size:1.5rem}abbr,acronym{border-bottom:1px dotted #666;cursor:help}ins,mark{background:#fff9c0;text-decoration:none}body{width:90%;max-width:1300px;margin:0 auto;padding:3em 0 0;overflow-x:hidden}header{margin:0 0 6em}footer,header{text-align:center}footer{margin:6em 0 0;padding:1em 0;font-size:80%}footer a{font-weight:400}#mofos,#mofos li{margin:0;padding:0}#mofos li{list-style:none}#mofos figure{width:70%;position:absolute;opacity:0;visibility:hidden;transition:all .2s ease-out;z-index:-1;border-radius:30% 70% 70% 30%/30% 30% 70% 70%;-webkit-animation:morph 4s linear infinite alternate,spin 3s linear infinite alternate,scale 4s linear infinite alternate;animation:morph 4s linear infinite alternate,spin 3s linear infinite alternate,scale 4s linear infinite alternate;overflow:hidden}#mofos figure img{display:block;position:relative;z-index:2;width:100%;height:auto;mix-blend-mode:multiply;-webkit-filter:grayscale(70%);filter:grayscale(70%);opacity:.45}#mofos figure .fig-bg{background:#ee5253;position:absolute;top:0;bottom:0;left:0;right:0;z-index:1}#mofos li{border-bottom:1px solid #fff;border-top:1px solid #fff;padding:2em 1em;display:flex;align-items:center;justify-content:space-between}#mofos li:hover figure{opacity:.8;visibility:visible}#mofos .name{width:60%}#mofos .movie{text-align:right}@-webkit-keyframes morph{0%{border-radius:31% 69% 57% 43%/30% 56% 44% 70%}to{border-radius:23% 77% 29% 71%/84% 18% 82% 16%}}@keyframes morph{0%{border-radius:31% 69% 57% 43%/30% 56% 44% 70%}to{border-radius:23% 77% 29% 71%/84% 18% 82% 16%}}@-webkit-keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(-10deg)}}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(-10deg)}}@-webkit-keyframes scale{0%{transform:scale(1);margin:0}to{transform:scale(.95);margin:1em}}@keyframes scale{0%{transform:scale(1);margin:0}to{transform:scale(.95);margin:1em}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
